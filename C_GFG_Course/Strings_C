


==============CODES / PROBLEMS
***************************PATTERN SEARCHING IN STRING
# include<stdio.h>
# include<string.h>
# include<stdbool.h>
 
bool search(char* s, char* p)
{
    int M = strlen(s);
    int N = strlen(p);
    int j;
    for(int i = 0; i<M; i++)
    {
        int a=i;
        for(j=0;j<N;j++)
        {
            if(p[j]==s[a])
            {                
                a++;
            }
            else
            {                
                break;
            }            
        }
        if(j==N)
        {
            return 1;
        }
    }
    return 0;
}
int main()
{
    char s[] = "eeksgeeksfor";
    char p[] = "geeks";
    if(search(s,p)==1)
    {
        printf("PATTERN EXISTS.");
    }
    else
    {
        printf("PATTERN DOES NOT EXISTS.");
    }    
}
....................ORR
 int m=strlen(s);
    int n=strlen(p);
    int j;
    
    for(int i=0;i<=(m-n);i++)
    {
        int a=i;
        
        for(j=0;j<n;j++)
        {
            if(s[a]!=p[j])
            {
                break;
            }
            a++;
        }
        
        if(j==n)
        {
            return i;
        }
    }
    
    return -1;
............ORR
int findPattern(char s[], char p[]){
    // code here
    char *ptr = strstr(s,p);
    if(ptr == NULL ) return -1;
    else return ptr-s;
}
********************************CODE FOR REVERSE A STRING
 int len=strlen(str);
    
    char new_string[15];
    int k=0;
    
    for(int i=(len-1);i>=0;i--)
    {
        
        new_string[k]=str[i];
        k++;
    }
    new_string[len]='\0';
    
    printf("%s",new_string);
ORR
 char s[100];
    scanf("%s", s);
    char newString[100];
    int l = strlen(s) - 1;
    int i = 0;
    while(s[i] != '\0')
    {
        newString[i] = s[l];
        l--;
        i++;
    }
    printf("%s", newString);
    return 0;
...................
#include <stdio.h>
#include <string.h>

int main()
{
     char s[100];
    scanf("%s", s);
    char newString[100];
    int l = strlen(s);
    int i = 0;
    while(l)
    {
        newString[i] = s[l-1];
        l--;
        i++;
    }
    printf("%s", newString);
    return 0;
}
*************************** CHECK FOR PALINDROME
char s[100];
    scanf("%s", s);
    char newString[100];
    int l = strlen(s);
    int i = 0;
    while(l)
    {
        if(newString[i]!=s[l-1]);
        {
            printf("NOT A PALINDROME.");
            break;
        }
        l--;
        i++;
        
    }
    printf("Yes");
    return 0;
...................ORR
bool isPalindrome(char s[]) {
    int n=strlen(s);
    for(int i;i<=n/2;i++){
        if (s[i]!=s[n-i-1]){
            return false;
        }
    }
    return true;
}
********************ANAGRAM OR NOT
#include <stdio.h>
#include <stdbool.h>
#include <string.h>
bool areAnagrams(char s1[], char s2[]) {
    // code here
    char t[256]={0};
    
    int n=strlen(s1);
    int m=strlen(s2);
    
    for(int i=0;i<m;i++)
    {
        t[s1[i]]++;
    }
    
     for(int i=0;i<m;i++)
    {
        t[s2[i]]--;
    }
    
    for(int i=0;i<256;i++)
    {
        if(t[i]!=0)
        {
            return 0;
        }
    }
    return 1;
}
int main()
{
    char s1[]="geeks";
    char s2[]="seepg";
    areAnagrams(s1,s2);
    
    if(areAnagrams(s1,s2))
    {
         printf("Strings are anagram.");
    }
    else
    {
         printf("Strings are NOT anagram.");
    }
}
*******************************PANGRAM
#include <stdio.h>
#include <string.h>

int isPangram(char str[])
{
    int mark[26]={0};
    int n=strlen(str);
    
    for(int i=0;i<n;i++)
    {
        if('A'<=str[i]&&str[i]<='Z')
        {
            mark[str[i]-'A']++;
        }
        else if('a'<=str[i]&&str[i]<='z')
        {
            mark[str[i]-'a']++;
        }
        
    }
    
    for(int i=0;i<n;i++)
    {
        if(mark[i]==0)
        {
            return 0;
        }
    }
     return 1;
    
}

int main()
{
    char str[]="Thequrownfoxjumpsoverthelazydog";
    if(isPangram(str))
    {
        printf("String is a Pangram.");
    }
    else
    {
         printf("String is NOT a Pangram.");
    }
}
************************EXTRA CHARACTER
#include <stdio.h>
#include <string.h>

int ExtraChar(char str1[],char str2[])
{
   int m=strlen(str1);
   int n=strlen(str2);
   int mark[26]={0};
   for(int i=0;i<m;i++)
   {
       mark[str1[i]-'a']++;
       
   }
   for(int i=0;i<n;i++)
   {
       mark[str2[i]-'a']--;
       if(mark[str2[i]-'a']==-1)
       {
           return (char)str2[i];
       }
   }
}
int main()
{
    char str1[]="efg";
    char str2[]="gtfe";
    printf("%c",ExtraChar(str1,str2));
}
