







=================CODES/ QUIZ
#include <stdio.h>
int main()
{
    int i = 5;
    printf("%d %d %d", i++, i++, i++);
    return 0;
} Compiler dependent  https://gateoverflow.in/336403/nielit-2017-july-scientist-b-it-section-b-32
................
#include <stdio.h>
int main()
{
  printf("%d", main);  
  return 0;
}  ans -- address of main function -- name of the function is actually a pointer variable to the function and prints address of the function
...............
#include <stdio.h>
int main()
{
    int (*ptr)(int ) = fun; // ptr is a pointer to function fun
    (*ptr)(3); --fun called using pointer
    return 0;
}
int fun(int n)
{
  for(;n > 0; n--)
    printf("GeeksQuiz ");
  return 0;
}  compiler error, since fun is not declared / defined b4 its assinged to ptr
..........
#include<stdio.h>
void dynamic(int s, ...)
{
    printf("%d", s);
}
int main()
{
    dynamic(2, 4, 6, 8);
    dynamic(3, 6, 9);
    return 0;
} ... dots is known as ellipsis which is variable no. of arguments of the function
https://www.tutorialspoint.com/cprogramming/c_variable_arguments.htm
https://gateoverflow.in/336402/nielit-2017-july-scientist-b-it-section-b-33
...........
What is the meaning of using extern before function declaration? For example following function sum is made 
extern extern int sum(int x, int y, int z) {     return (x + y + z); }
a)Function is made globally available b)extern means nothing,
sum() is same without extern keyword. c)Function need not to be declared before its use d)Function is made local to the file Correct
answer is option 'B'. Can you explain this answer?
Read more at: https://edurev.in/question/3274857/What-is-the-meaning-of-using-extern-before-function-declaration-For-example-following-function-sum-i
https://edurev.in/question/3274857/What-is-the-meaning-of-using-extern-before-function-declaration-For-example-following-function-sum-i
........................
What is the meaning of using static before function declaration? 
For example following function sum is made static static int sum(int x, int y, int z) 
{     return (x + y + z); } a)Static means nothing, sum() is same without static keyword.
b)Function need not to be declared before its use c)Access to static functions is restricted to the file where 
they are declared d)Static functions are made inline Correct answer is option 'C'. Can you explain this answer?
Read more at: https://edurev.in/question/3274850/What-is-the-meaning-of-using-static-before-function-declaration-For-example-following-function-sum-i

.............
#include "stdio.h"
int main()
{
 int a = 10;
 int b = 15;

 printf("=%d",(a+1),(b=a+2));
 printf(" %d=",b);

 return 0;
} ans -- =11 12== as per C std. a;; arg of printf are evaluated,even if they get printed or not, hence b=a+2 will be evaluated 
and b will be 12 after 1st printf.
................
#include <stdio.h>
int main()
{
 int a = 10;
 printf("=%d %d=",(a+1));
 return 0;
} if there are insufficient arguments for the format, the behaviour is undefined,if format is exhausted while args remain,the excess args are
avaluated as always but are otherwise ignored,some imp. can choose to print =10 0= while others =10 X= , so its compiler dep.
..........
#include<stdio.h>
int f(int n, int k)
{
    if (n == 0)
        return 0;
    else if (n % 2)
        return f(n/2, 2*k) + k;
    else return f(n/2, 2*k) - k;
}
int main ()
{
    printf("%d", f(20, 1));
    return 0;
}
https://gateoverflow.in/3818/gate-it-2005-question-57
.............
#include <stdio.h>
int main() {
    float sum = 0.0, j=1.0, i=2.0;
    while (i/j > 0.0625) {
        j=j+j;
        sum=sum+i/j;
        printf("%f\n", sum);
    }
    return 0;
}   https://gateoverflow.in/302796/gate-cse-2019-question-52
..............
int main() {
    int x=1;
    printf("%d",(*char(char *)&x));
}   https://gateoverflow.in/213587/isro-cse-2018-question-1
....................
https://gateoverflow.in/213528/isro-cse-2018-question-60
int main() {
    int x=2,y=5;
    if(x<y) return (x=(x+y));
    else printf("z1");
    printf("z2");
}
====================================PROBLEMS
Given a number n, find the first digit of the number.
int quote=0;
    if(n<10)
    {
        return n;
    }
    else
    {
        quote=n/10;
        firstDigit(quote);
    } ORR
while(n >= 10){
        n=n/10;
    }
    return n;
