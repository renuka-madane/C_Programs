==========sizeof pointer and its values are diff.
#include <stdio.h>
#define R 10
#define C 20

int main()
{
    int (*p)[R][C];
    printf("%ld",sizeof(p)); if we do sizeof(*p) then ans is 800
   
    return 0;
} ---->  8 
==================
#include <stdio.h>
void fun(int **ptr)  double ptr
{
    int w=115;
    *ptr=&w;
}
int main()
{
    int r=20;
    int *p=&r;
    fun(&p);
     printf("%d", *p);     
}  ANSWER --  115  PASS BY REFRENCE IN POINTER
====================
#include <stdio.h>

void fun(int *ptr)  ptr
{
    int w=115;
    ptr=&w;
}
int main()
{
    int r=20;
    int *p=&r;
    fun(p);
     printf("%d", *p);     
}  ANS 20 -- PASS BY VALUE USING POINTER
=================type 3
void fun(int *ptr) 
{
    *ptr=551;
}
int main()
{
    int r=20;
   
    fun(&r);
     printf("%d",r); 
    
} ANS = 551 -->> USING NORMAL POINTERS
======================
#include <stdio.h>
#include <string.h>
int main()
{
    char str[]="Geeks";
    char str2[]={'g','e','e','k','s'};
    
    printf("%d  ",(int)strlen(str2)); -->> print len including the commas as well
    printf("%d -> ",(int)strlen(str));-->> 
    int size1= sizeof(str)/sizeof(str[0]);
    int size2= sizeof(str2)/sizeof(str2[0]);
    
    printf("%d ",size1);
     printf("%d ",size2);
    ANS==  10  5  -> 6 5;
}
