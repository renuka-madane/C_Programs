BASIC TRAVERSAL OF CIRCULAR LL****************************

#include <stdio.h>
#include <conio.h>
#include <stdlib.h>
struct node
{
    int data;
    struct node *next;
};
int main()
{
    struct node *head,*mid1,*mid2,*mid3,*last;
    
    head=malloc(sizeof(struct node));
    mid1=malloc(sizeof(struct node));
    mid2=malloc(sizeof(struct node));
    mid3=malloc(sizeof(struct node));
    last=malloc(sizeof(struct node));
    
    head->data=10;
    mid1->data=20;
    mid2->data=30;
    mid3->data=40;
    last->data=50;
    
    //assigning the references of next node, in circular manner
    
    head->next=mid1;
    mid1->next=mid2;
    mid2->next=mid3;
    mid3->next=last;
    last->next=head;
    
    struct node *t1=head;    
    while(t1->next != head)
    {
        printf("data : %d \naddresses: %p \n",t1->data,t1->next);
        t1=t1->next;
    }
    printf("data : %d \naddresses: %p \n",t1->data,t1->next);

ORR
struct node *t1=head;    
    do
    {
        printf("data : %d \naddresses: %p \n",t1->data,t1->next);
        t1=t1->next;
    }while(t1 != head);

ORR
struct node *new_node=malloc(sizeof(struct node));
    new_node->data=66;
    new_node->next=head;
    struct node *curr=head;
    
    while(curr->next != head)
    {
        curr=curr->next;
    }
    curr->next=new_node;
    head=new_node;

    
}
