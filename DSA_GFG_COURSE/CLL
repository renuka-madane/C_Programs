****************CLL TRAVERSAL AND ADD NEW NODE AT START
#include <stdio.h>
#include <conio.h>
#include <stdlib.h>
struct node{
    int data;
    struct node *next;
};
int main()
{
    struct node *head,*mid1,*mid2,*mid3,*last;
    
    head=(struct node*)malloc(sizeof(struct node));
    mid1=(struct node*)malloc(sizeof(struct node));
    mid2=(struct node*)malloc(sizeof(struct node));
    mid3=(struct node*)malloc(sizeof(struct node));
    last=(struct node*)malloc(sizeof(struct node));
    
     head->data=10;
    mid1->data=20;
    mid2->data=30;
    mid3->data=40;
    last->data=50;
    
    head->next=mid1;
    mid1->next=mid2;
    mid2->next=mid3;
    mid3->next=last;
    last->next=head;
    
    struct node *temp=head;
    do
    {
        printf("%d->",temp->data);
        temp=temp->next;
    }while(temp!=head);
    printf("\n");
     printf("Add new node at start of CLL--");
    
    struct node *newNode=(struct node*)malloc(sizeof(struct node));
    newNode->data=66;
    newNode->next=head;
    
    struct node *curr=head;
    while(curr->next!=head)
    {
        curr=curr->next;
    }
    curr->next=newNode;
    head=newNode;
    
    temp=head;
    do
    {
        printf("%d->",temp->data);
        temp=temp->next;
    }while(temp!=head);
    
}=============ADD NEW NODE AT END
 printf("\n");
     printf("Add new node at END of CLL--");
    
    struct node *newNode=(struct node*)malloc(sizeof(struct node));
    newNode->data=66;
    
    
    struct node *curr=head;
    while(curr->next!=head)
    {
        curr=curr->next;
    }
    curr->next=newNode;
    newNode->next=head;
    
    temp=head;
    do
    {
        printf("%d->",temp->data);
        temp=temp->next;
    }while(temp!=head);

************************CLL REVERSAL ITERATIVE
#include <stdio.h>
#include <conio.h>
#include <stdlib.h>
struct node{
    int data;
    struct node *next;
};
int main()
{
    struct node *head,*mid1,*mid2,*mid3,*last;
    
    head=(struct node*)malloc(sizeof(struct node));
    mid1=(struct node*)malloc(sizeof(struct node));
    mid2=(struct node*)malloc(sizeof(struct node));
    mid3=(struct node*)malloc(sizeof(struct node));
    last=(struct node*)malloc(sizeof(struct node));
    
     head->data=10;
    mid1->data=20;
    mid2->data=30;
    mid3->data=40;
    last->data=50;
    
    head->next=mid1;
    mid1->next=mid2;
    mid2->next=mid3;
    mid3->next=last;
    last->next=head;
    
    struct node *temp=head;
    do
    {
        printf("%d->",temp->data);
        temp=temp->next;
    }while(temp!=head);
    printf("\n");
    printf("AFter reversing the CLL-- ");
    struct node *curr,*prev,*Next;
    
    prev=head;
    curr=head->next;
    
    do
    {
        Next=curr->next;
        curr->next=prev;
        prev=curr;
        curr=Next;
    }while(curr!=head);
    
    printf("%d",head->data);
    printf("%d",prev->data);
    head->next=prev;
    head=prev;
    
struct node *t3=head;

    do
    {
        printf("%d->",t3->data);
        t3=t3->next;
    }while(t3!=head);
    
}
************************DELETE 1ST NODE
printf("\n");
     printf("Delete 1st node of CLL--");
     
     struct node *t2=head;
     
     
     struct node *t3=head;
     while(t3->next!=head)
     {
         t3=t3->next;
     }
    t3->next=head->next;
    head=head->next;
    free(t2);
    struct node *t1=head;
   do
    {
        printf("%d->",t1->data);
        t1=t1->next;
    } while(t1!=head);
************************DELETE LAST NODE
 printf("\n");
     printf("Delete LAST node of CLL--");
     struct node *t3=head;
     while(t3->next->next!=head)
     {
         t3=t3->next;
     }
    free(t3->next);
    t3->next=head;
    struct node *t1=head;
   do
    {
        printf("%d->",t1->data);
        t1=t1->next;
    } while(t1!=head);
********************ADD NEW NODE IN SORTED WAY
 printf("\n");
     printf("Adding new node in sorted way in CLL--");
     struct node *NewNode=(struct node*)malloc(sizeof(struct node));
     NewNode->data=33;
     
     struct node *prev=head;
     struct node *curr=head->next;
     while(curr->next!=head)
     {
         if(curr->data>NewNode->data)
         {
              NewNode->next=prev->next;
              prev->next=NewNode;
            
         }
         curr=curr->next;
         prev=prev->next;
     }
    temp=head;
   do
    {
        printf("%d->",temp->data);
        temp=temp->next;
    } while(temp!=head);
*****************************DELETE KTH POS NODE
 printf("\n");
     printf("Delete node at given pos of CLL--");
    int pos=4;
    struct node *t2=head;
    while(pos>2)
    {
        t2=t2->next;
        pos--;
    }
    struct node *t3=t2->next;
    t2->next=t2->next->next;
    free(t3);
    temp=head;
    do
    {
        printf("%d->",temp->data);
        temp=temp->next;
    }while(temp!=head);
