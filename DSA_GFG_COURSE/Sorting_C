===========IS SORTED ARRAY OR NOT - RECURSIVE
#include <stdio.h>
#include <stdbool.h>

bool isSorted(int *arr,int size)
{
    if(size==1 || size==0)
    {
        return true;
    }
    if(arr[size-1]<arr[size-2])
    {
        return false;
    }
    
    isSorted(arr,size-1);
}
int main()
{
    int arr[] = {10, 10, 13, 40, 0};
    int n=sizeof(arr)/sizeof(arr[0]);
    if(isSorted(arr,n))
    {
        printf("IS SORTED");
    }
    else
    {
        printf("UN SORTED");
    }
    
}
====================BUBBLE SORTING
#include <stdio.h>
#include <stdbool.h>
void swap(int *num1,int *num2)
{
    int temp=*num1;
    *num1=*num2;
    *num2=temp;
}
void bubbleSort(int *arr,int n)
{
    int i=0,j=0;
    bool swapped=false;
    
    for (i = 0; i < n - 1; i++) {
        swapped = false;
        for (j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                swap(&arr[j], &arr[j + 1]);
                swapped = true;
            }
        }        
    }    
    while(i<n-1)
    {
        swapped = false;
        
        while(j<n-1-i)
        {
            
            if (arr[j] > arr[j + 1]) {
                swap(&arr[j], &arr[j + 1]);
                swapped = true;
            }
            j++;
        }
        // If no two elements were swapped by inner loop,
        // then break
        if (swapped == false)
            break;
        i++;
        
    }    
}
void printArray(int *arr,int size)
{    
    int i=0;
    while(i<size)
    {
        printf("%d->",arr[i]);
        i++;
    }    
}
int main()
{
    int arr[] = { 64, 34, 25, 12, 22, 11, 90 };
    int n=sizeof(arr)/sizeof(arr[0]);
    bubbleSort(arr,n);
     printf("Sorted array: \n");
     printArray(arr,n);
    return 0;
}
